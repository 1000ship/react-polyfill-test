{"version":3,"sources":["reportWebVitals.ts","contexts/MainContext.ts","logo.svg","App.tsx","Root.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultValue","name","age","React","createContext","isIE","document","documentMode","Center","styled","div","css","CustomDiv","App","props","setContext","context","useContext","MainContext","useState","count","setCount","data","setData","appRef","useCallback","app","console","log","children","length","useEffect","alert","a","fetch","method","response","json","className","ref","Object","getOwnPropertyNames","join","src","logo","alt","style","marginLeft","marginRight","onClick","cursor","Root","Provider","value","ReactDOM","render","StrictMode","getElementById"],"mappings":"iPAYeA,G,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCADQ,EAA6B,CACxCC,KAAM,GACNC,IAAK,GAGQC,MAAMC,cAA4BJ,G,QCZlC,G,OAAA,IAA0B,kC,QCM5BK,IAAkCC,SAAiBC,aAE1DC,EAASC,IAAOC,IAAV,oPACRL,EACEM,YADE,8HAMFA,YANE,4JAwBFC,EAAYH,IAAOC,IAAV,sEAiEAG,EA1DV,SAACC,GACJ,IAAQC,EAAeD,EAAfC,WACFC,EAAUC,qBAAWC,GAC3B,EAA0BC,mBAAiB,GAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAkB,IAA1C,mBAAOG,EAAP,KAAaC,EAAb,KACMC,EAASC,uBACb,SAACC,GAAD,OAASA,GAAOC,QAAQC,IAAR,6BAA2BF,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAKG,SAASC,OAAzC,gBAChB,IAGFC,qBAAU,WACM,KAAVX,GAAcY,MAAM,6BACxBjB,EAAW,CAAEd,KAAM,eAAMC,IAAKkB,MAC7B,CAACA,IAmBJ,OAbAW,qBAAU,WACR,sBAAC,8BAAAE,EAAA,sEACwBC,MACrB,6GACA,CACEC,OAAQ,QAJb,cACOC,EADP,gBAOoBA,EAASC,OAP7B,OAOOA,EAPP,OAQCd,EAAQc,GART,0CAAD,KAUC,IAGD,qBAAKC,UAAU,MAAMC,IAAKf,EAA1B,SACE,eAAChB,EAAD,WACE,8BAAMH,EAAO,SAAW,eACxB,gCACGW,EAAQf,KADX,MACoBe,EAAQd,OAE5B,8BAAMsC,OAAOC,oBAAoBnB,GAAMoB,KAAK,QAC5C,cAAC9B,EAAD,gDACA,qBAAK+B,IAAKC,EAAMN,UAAU,WAAWO,IAAI,SACzC,kDAEE,sBAAMC,MAAO,CAAEC,WAAY,EAAGC,YAAa,GAA3C,6BAEF,mBACEV,UAAU,WACVW,QAjCa,WACnB5B,GAAS,SAACD,GAAD,OAAWA,EAAQ,MAiCtB0B,MAAO,CAAEI,OAAQ,WAHnB,SAKa,IAAV9B,EAAc,WAAd,yBAA6CA,EAA7C,kBC9EI+B,EATQ,WACrB,MAA8BhC,mBAAuBnB,GAArD,mBAAOgB,EAAP,KAAgBD,EAAhB,KACA,OACE,cAACG,EAAYkC,SAAb,CAAsBC,MAAOrC,EAA7B,SACE,cAAC,EAAD,CAAKD,WAAYA,OCAvBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASmD,eAAe,SAM1BlE,M","file":"static/js/main.7682689b.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry?: any) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nexport interface IMainContext {\n  name: string;\n  age: number;\n}\n\nexport const defaultValue: IMainContext = {\n  name: '',\n  age: 0,\n};\n\nexport default React.createContext<IMainContext>(defaultValue);\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import MainContext, { IMainContext } from 'contexts/MainContext';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport './App.css';\nimport logo from './logo.svg';\n\nexport const isIE = /* @cc_on!@ */ false || !!(document as any).documentMode;\n\nconst Center = styled.div`\n  ${isIE\n    ? css`\n        display: table-cell;\n        text-align: center;\n        vertical-align: middle;\n      `\n    : css`\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n      `}\n\n  background-color: #282c34;\n  min-width: 100vw;\n  min-height: 100vh;\n  font-size: calc(10px + 2vmin);\n  color: white;\n\n  @media only screen and (max-width: 600px) {\n    background-color: black;\n  }\n`;\n\nconst CustomDiv = styled.div`\n  color: red;\n  background-color: #fff;\n`;\n\nconst App: React.FC<{\n  setContext: React.Dispatch<React.SetStateAction<IMainContext>>;\n}> = (props) => {\n  const { setContext } = props;\n  const context = useContext(MainContext);\n  const [count, setCount] = useState<number>(0);\n  const [data, setData] = useState<unknown>({});\n  const appRef = useCallback<React.RefCallback<HTMLDivElement>>(\n    (app) => app && console.log(`App Div has ${app?.children.length} children`),\n    [],\n  );\n\n  useEffect(() => {\n    if (count === 10) alert('You clicked me 10 times!!');\n    setContext({ name: '성혁', age: count });\n  }, [count]);\n\n  const clickHandler = () => {\n    setCount((count) => count + 1);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\n        'https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/examples/v2.0/json/api-with-examples.json',\n        {\n          method: 'get',\n        },\n      );\n      const json = await response.json();\n      setData(json);\n    })();\n  }, []);\n\n  return (\n    <div className=\"App\" ref={appRef}>\n      <Center>\n        <div>{isIE ? \"I'm IE\" : \"I'm not IE\"}</div>\n        <div>\n          {context.name} | {context.age}\n        </div>\n        <div>{Object.getOwnPropertyNames(data).join(', ')}</div>\n        <CustomDiv>This is styled-components element</CustomDiv>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Paragraph Element\n          <code style={{ marginLeft: 4, marginRight: 4 }}>Code Element</code>\n        </p>\n        <a\n          className=\"App-link\"\n          onClick={clickHandler}\n          style={{ cursor: 'pointer' }}\n        >\n          {count === 0 ? 'Click Me' : `You clicked me ${count} times`}\n        </a>\n      </Center>\n    </div>\n  );\n};\n\nexport default App;\n","import App from 'App';\nimport MainContext, { defaultValue, IMainContext } from 'contexts/MainContext';\nimport React, { useState } from 'react';\n\nconst Root: React.FC = () => {\n  const [context, setContext] = useState<IMainContext>(defaultValue);\n  return (\n    <MainContext.Provider value={context}>\n      <App setContext={setContext} />\n    </MainContext.Provider>\n  );\n};\n\nexport default Root;\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Root from './Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}